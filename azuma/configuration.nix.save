{ config, pkgs, ... }:

{ imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix ];

  nix = {
    settings = {
      experimental-features = ["nix-command" "flakes"];
    };
  };
  # Bootloader.
  boot.loader.systemd-boot.enable = true; boot.loader.efi.canTouchEfiVariables = true;

  networking.hostName = "nixos"; # Define your hostname.
  # networking.wireless.enable = true; # Enables wireless support via wpa_supplicant.

  # Configure network proxy if necessary networking.proxy.default = "http://user:password@proxy:port/"; networking.proxy.noProxy = 
  # "127.0.0.1,localhost,internal.domain";

  # Enable networking
  networking.networkmanager.enable = true;

  # Set your time zone.
  time.timeZone = "Asia/Tokyo";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.UTF-8";

  i18n.extraLocaleSettings = { LC_ADDRESS = "en_US.UTF-8"; LC_IDENTIFICATION = "en_US.UTF-8"; LC_MEASUREMENT = "en_US.UTF-8"; 
    LC_MONETARY = "en_US.UTF-8"; LC_NAME = "en_US.UTF-8"; LC_NUMERIC = "en_US.UTF-8"; LC_PAPER = "en_US.UTF-8"; LC_TELEPHONE = 
    "en_US.UTF-8"; LC_TIME = "en_US.UTF-8";
  };
  i18n.inputMethod = {
   enabled = "fcitx5";
   fcitx5.addons = [pkgs.fcitx5-mozc];
  };
{ config, pkgs, ... }:

{
  # WezTerm configuration
  programs.wezterm = {
    enable = true;
    extraConfig = ''
      local wezterm = require 'wezterm'

      local config = {}

      -- General settings
      config.use_ime = true -- Enable IME for Japanese input

      -- OSC52を有効化する
      config.enable_csi_u_key_encoding = true

      -- Font settings
      config.font = wezterm.font("HackGen35 Console NF", {
        weight = "Regular",
        stretch = "Normal",
        style = "Normal"
      })

      config.font_size = 24.0
      config.line_height = 1.6

      -- Color scheme and opacity
      config.color_scheme = 'Tokyo Night Storm (Gogh)'
      config.window_background_opacity = 0.9
      config.macos_window_background_blur = 20

      -- Tab bar settings
      config.window_decorations = "RESIZE"
      config.show_new_tab_button_in_tab_bar = false
      config.show_close_tab_button_in_tabs = false
      config.colors = {
         tab_bar = {
           inactive_tab_edge = "none",
         },
      }

      -- Border settings
      local border_color = '#783aa1'
      config.window_frame = {
        border_left_width = '1.0cell',
        border_right_width = '1.0cell',
        border_bottom_height = '0.25cell',
        border_top_height = '0.25cell',
        border_left_color = border_color,
        border_right_color = border_color,
        border_bottom_color = border_color,
        border_top_color = border_color,

        font = wezterm.font(
          "HackGen35 Console NF",
          {
            weight = "Regular",
            stretch = "Normal",
            style = "Normal"
          }
        ),
        font_size = 20.0,
      }

      -- Key bindings
      config.keys = {
        {
          key = 'f',
          mods = 'CTRL',
          action = wezterm.action.ToggleFullScreen
        },
        {
          key = 'y',
          mods = 'CTRL',
          action = wezterm.action.ActivateCopyMode
        },
        {
          key = 'i',
          mods = 'CTRL',
          action = wezterm.action.SplitPane {
            direction = 'Down',
            size = { Percent = 20 },
          },
        },
        {
          key = 'H',
          mods = 'CTRL',
          action = wezterm.action.ActivatePaneDirection 'Left',
        },
        {
          key = 'J',
          mods = 'CTRL',
          action = wezterm.action.ActivatePaneDirection 'Down',
        },
        {
          key = 'K',
          mods = 'CTRL',
          action = wezterm.action.ActivatePaneDirection 'Up',
        },
        {
          key = 'L',
          mods = 'CTRL',
          action = wezterm.action.ActivatePaneDirection 'Right',
        },
      }

      -- Return the final configuration
      return config
    '';
  };
}

  fonts = {
    fonts = with pkgs; [
      noto-fonts-cjk-serif
      noto-fonts-cjk-sans
      noto-fonts-emoji
      nerd-fonts.jetbrains-mono
    ];
    fontDir.enable = true;
    fontconfig = {
      defaultFonts = {
        serif = ["Noto Serif CJK JP" "Noto Color Emoji"];
        sansSerif = ["Noto Sans CJK JP" "Noto Color Emoji"];
        monospace = ["JetBrainsMono Nerd Font" "Noto Color Emoji"];
        emoji = ["Noto Color Emoji"];
      };
    };
  };

  # Enable the X11 windowing system.
  services.xserver.enable = true;

  # Enable the GNOME Desktop Environment.
  services.xserver.displayManager.gdm.enable = true; services.xserver.desktopManager.gnome.enable = true;

  # Configure keymap in X11
  services.xserver.xkb = { layout = "us"; variant = "";
  };

  # Enable CUPS to print documents.
  services.printing.enable = true;

  # Enable sound with pipewire.
  services.pulseaudio.enable = false; security.rtkit.enable = true; services.pipewire = {
    enable = true; alsa.enable = true; alsa.support32Bit = true; pulse.enable = true;
    # If you want to use JACK applications, uncomment this jack.enable = true;

    # use the example session manager (no others are packaged yet so this is enabled by default, no need to redefine it in your config 
    # for now)
    #media-session.enable = true;
  };

  # Enable touchpad support (enabled default in most desktopManager). services.xserver.libinput.enable = true;

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.shunsock = {
    isNormalUser = true;
    description = "Shunsuke Tsuchiya";
    extraGroups = [ "networkmanager" "wheel" ];
    shell = pkgs.zsh;
  };

  # Install firefox.
  programs.firefox.enable = true;

  # List packages installed in system profile. To search, run: $ nix search wget
  environment.systemPackages = with pkgs; [
    vim
    curl
    wezterm
  ];
  virtualisation.docker.enable = true;

  programs = {
    git = { enable = true; };
    zsh = { enable = true; };
  };

  # Some programs need SUID wrappers, can be configured further or are started in user sessions. programs.mtr.enable = true; 
  # programs.gnupg.agent = {
  #   enable = true; enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Enable the OpenSSH daemon. services.openssh.enable = true;

  # Open ports in the firewall. networking.firewall.allowedTCPPorts = [ ... ]; networking.firewall.allowedUDPPorts = [ ... ]; Or 
  # disable the firewall altogether. networking.firewall.enable = false;

  # This value determines the NixOS release from which the default settings for stateful data, like file locations and database 
  # versions on your system were taken. It‘s perfectly fine and recommended to leave this value at the release version of the first 
  # install of this system. Before changing this value read the documentation for this option (e.g. man configuration.nix or on 
  # https://nixos.org/nixos/options.html).
  system.stateVersion = "25.05"; # Did you read the comment?

}
